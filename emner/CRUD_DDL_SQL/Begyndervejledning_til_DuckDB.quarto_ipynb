{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "order: 2\n",
        "format:\n",
        "   html:\n",
        "      order: 1\n",
        "---\n",
        "\n",
        "\n",
        "# Begyndervejledning til DuckDB: \n",
        "\n",
        "__Installation, Tilslutning og CRUD-operationer__ \n",
        "\n",
        "## Installation af DuckDB\n",
        "\n",
        "### macOS\n",
        "1. Brug `Homebrew` til at installere DuckDB:\n",
        "   ```bash\n",
        "   brew install duckdb\n",
        "   ```\n",
        "\n",
        "### Windows\n",
        "Hvis du har `winget`installeret:\n",
        "\n",
        "1. Brug `winget`:\n",
        "   ```powershell\n",
        "   winget install DuckDB.cli\n",
        "   ```\n",
        "\n",
        "Ellers\n",
        "\n",
        "1. Download den seneste version fra [DuckDB's hjemmeside](https://duckdb.org/docs/installation/)\n",
        "2. Udpak ZIP-filen til en mappe efter eget valg\n",
        "\n",
        "### Linux\n",
        "1. Download den seneste version:\n",
        "   ```bash\n",
        "   curl https://install.duckdb.org | sh\n",
        "   ```\n",
        "\n",
        "### Python-installation\n",
        "Hvis du foretrækker at bruge DuckDB gennem Python:\n",
        "```bash\n",
        "pip install duckdb\n",
        "```\n",
        "\n",
        "## Start og Tilslutning til DuckDB\n",
        "\n",
        "### Via kommandolinjen\n",
        "Start DuckDB med kommandolinjeværktøjet:\n",
        "```bash\n",
        "duckdb\n",
        "```\n",
        "\n",
        "Dette vil starte en midlertidig in-memory database. For at gemme dine data, angiv et filnavn:\n",
        "```bash\n",
        "duckdb mindb.db\n",
        "```\n",
        "\n",
        "### Via Python"
      ],
      "id": "ad29f503"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: true\n",
        "\n",
        "import duckdb\n",
        "\n",
        "# Forbind til en database-fil\n",
        "conn = duckdb.connect('mindb.db')\n",
        "\n",
        "# Eller opret forbindelse (in-memory database)\n",
        "conn = duckdb.connect()"
      ],
      "id": "f52b61f4",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## Grundlæggende CRUD-operationer\n",
        "\n",
        "### 1. Oprettelse af tabeller (CREATE)\n",
        "\n",
        "**Via CLI:**\n",
        "```sql\n",
        "CREATE TABLE kunder (\n",
        "    id INTEGER PRIMARY KEY,\n",
        "    navn VARCHAR(50) NOT NULL,\n",
        "    email VARCHAR(100),\n",
        "    oprettet_dato DATE DEFAULT CURRENT_DATE\n",
        ");\n",
        "```\n",
        "\n",
        "**Via Python:**"
      ],
      "id": "767bc57a"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| output: false\n",
        "\n",
        "conn.execute(\"\"\"\n",
        "CREATE TABLE kunder (\n",
        "    id INTEGER PRIMARY KEY,\n",
        "    navn VARCHAR(50) NOT NULL,\n",
        "    email VARCHAR(100),\n",
        "    oprettet_dato DATE DEFAULT CURRENT_DATE\n",
        ")\n",
        "\"\"\")"
      ],
      "id": "e841253d",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "### 2. Indsætte data (INSERT)\n",
        "\n",
        "**Indsæt en enkelt række:**\n",
        "```sql\n",
        "INSERT INTO kunder (id, navn, email) \n",
        "VALUES (1, 'Anders Jensen', 'anders@example.com');\n",
        "```\n",
        "\n",
        "**Indsæt flere rækker på én gang:**\n",
        "```sql\n",
        "INSERT INTO kunder (id, navn, email) VALUES \n",
        "(2, 'Mette Nielsen', 'mette@example.com'),\n",
        "(3, 'Lars Pedersen', 'lars@example.com'),\n",
        "(4, 'Hanne Sørensen', 'hanne@example.com');\n",
        "```\n",
        "\n",
        "**Via Python:**"
      ],
      "id": "219962c7"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| output: false\n",
        "\n",
        "conn.execute(\"INSERT INTO kunder (id, navn, email) VALUES (5, 'Jonas Hansen', 'jonas@example.com')\")\n",
        "\n",
        "# Flere rækker\n",
        "conn.execute(\"\"\"\n",
        "INSERT INTO kunder (id, navn, email) VALUES \n",
        "(6, 'Sofie Larsen', 'sofie@example.com'),\n",
        "(7, 'Ole Madsen', 'ole@example.com')\n",
        "\"\"\")"
      ],
      "id": "240c8ce4",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "### 3. Læse data (SELECT)\n",
        "\n",
        "**Vælg alle kolonner og rækker:**\n",
        "```sql\n",
        "SELECT * FROM kunder;\n",
        "```\n",
        "\n",
        "**Vælg specifikke kolonner:**\n",
        "```sql\n",
        "SELECT navn, email FROM kunder;\n",
        "```\n",
        "\n",
        "**Filtrering med WHERE:**\n",
        "```sql\n",
        "SELECT * FROM kunder WHERE id > 3;\n",
        "```\n",
        "\n",
        "**Sortering med ORDER BY:**\n",
        "```sql\n",
        "SELECT * FROM kunder ORDER BY navn ASC;\n",
        "```\n",
        "\n",
        "**Via Python:**"
      ],
      "id": "72c06c9a"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: true\n",
        "\n",
        "# Hent alle rækker\n",
        "result = conn.execute(\"SELECT * FROM kunder\").fetchall()\n",
        "for row in result:\n",
        "    print(row)"
      ],
      "id": "92bf9bf3",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: true\n",
        "# Brug pandas til at få en DataFrame\n",
        "df = conn.execute(\"SELECT * FROM kunder\").df()\n",
        "print(df)"
      ],
      "id": "1a114ae3",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "### 4. Opdatere data (UPDATE)\n",
        "\n",
        "**Opdater en enkelt række:**\n",
        "```sql\n",
        "UPDATE kunder SET email = 'ny_email@example.com' WHERE id = 1;\n",
        "```\n",
        "\n",
        "**Opdater flere rækker:**\n",
        "```sql\n",
        "UPDATE kunder SET oprettet_dato = '2023-01-01' WHERE id < 5;\n",
        "```\n",
        "\n",
        "**Via Python:**\n",
        "```python\n",
        "conn.execute(\"UPDATE kunder SET email = 'anden_email@example.com' WHERE id = 2\")\n",
        "```\n",
        "\n",
        "### 5. Slette data (DELETE)\n",
        "\n",
        "**Slet en enkelt række:**\n",
        "```sql\n",
        "DELETE FROM kunder WHERE id = 7;\n",
        "```\n",
        "\n",
        "**Slet flere rækker:**\n",
        "```sql\n",
        "DELETE FROM kunder WHERE id > 5;\n",
        "```\n",
        "\n",
        "**Slet alle rækker:**\n",
        "```sql\n",
        "DELETE FROM kunder;\n",
        "```\n",
        "\n",
        "**Via Python:**\n",
        "```python\n",
        "conn.execute(\"DELETE FROM kunder WHERE id = 6\")\n",
        "```\n",
        "\n",
        "## Bulk-operationer\n",
        "\n",
        "### Masseindsætning fra CSV-fil\n",
        "\n",
        "**Via CLI:**\n",
        "```sql\n",
        "-- Indsæt data fra en CSV-fil\n",
        "COPY kunder FROM 'data/kunder.csv' (HEADER, DELIMITER ',');\n",
        "```\n",
        "\n",
        "**Via Python:**\n",
        "```python\n",
        "# Med en lokal CSV-fil\n",
        "conn.execute(\"COPY kunder FROM 'data/kunder.csv' (HEADER, DELIMITER ',')\")\n",
        "\n",
        "# Med pandas\n",
        "import pandas as pd\n",
        "df = pd.read_csv('data/kunder.csv')\n",
        "conn.execute(\"INSERT INTO kunder SELECT * FROM df\")\n",
        "```\n",
        "\n",
        "### Masseindsætning fra Python-liste\n",
        "\n",
        "```python\n",
        "# Indsæt flere rækker fra en liste af tupler\n",
        "kunde_data = [\n",
        "    (8, 'Emma Winther', 'emma@example.com', '2023-06-01'),\n",
        "    (9, 'Niels Berg', 'niels@example.com', '2023-06-02'),\n",
        "    (10, 'Ida Holm', 'ida@example.com', '2023-06-03')\n",
        "]\n",
        "\n",
        "# Metode 1: Brug executemany\n",
        "conn.executemany(\n",
        "    \"INSERT INTO kunder (id, navn, email, oprettet_dato) VALUES (?, ?, ?, ?)\",\n",
        "    kunde_data\n",
        ")\n",
        "\n",
        "# Metode 2: Brug pandas DataFrame\n",
        "import pandas as pd\n",
        "df = pd.DataFrame(kunde_data, columns=['id', 'navn', 'email', 'oprettet_dato'])\n",
        "conn.execute(\"INSERT INTO kunder SELECT * FROM df\")\n",
        "```\n",
        "\n",
        "## Ind- og udlæsning fra forskellige filformater\n",
        "\n",
        "### Indlæsning fra filformater\n",
        "\n",
        "**CSV-filer:**\n",
        "```sql\n",
        "-- Indlæs direkte fra CSV\n",
        "SELECT * FROM 'data/kunder.csv';\n",
        "\n",
        "-- Opret tabel baseret på CSV\n",
        "CREATE TABLE nye_kunder AS SELECT * FROM 'data/kunder.csv';\n",
        "\n",
        "-- Med specifikke indstillinger\n",
        "SELECT * FROM read_csv_auto('data/kunder.csv', delim=',', header=true);\n",
        "```\n",
        "\n",
        "**Parquet-filer:**\n",
        "```sql\n",
        "-- Installer extension hvis nødvendig\n",
        "INSTALL parquet;\n",
        "LOAD parquet;\n",
        "\n",
        "-- Indlæs data fra Parquet\n",
        "SELECT * FROM 'data/kunder.parquet';\n",
        "\n",
        "-- Med flere muligheder\n",
        "SELECT * FROM read_parquet('data/kunder.parquet');\n",
        "```\n",
        "\n",
        "**JSON-filer:**\n",
        "```sql\n",
        "-- Installer extension hvis nødvendig\n",
        "INSTALL json;\n",
        "LOAD json;\n",
        "\n",
        "-- Indlæs data fra JSON\n",
        "SELECT * FROM 'data/kunder.json';\n",
        "\n",
        "-- Med flere indstillinger\n",
        "SELECT * FROM read_json_auto('data/kunder.json');\n",
        "```\n",
        "\n",
        "**Excel-filer:**\n",
        "```sql\n",
        "-- Installer extension hvis nødvendig\n",
        "INSTALL spatial;\n",
        "LOAD spatial;\n",
        "\n",
        "-- Indlæs data fra Excel\n",
        "SELECT * FROM st_read('data/kunder.xlsx');\n",
        "```\n",
        "\n",
        "### Udlæsning til filformater\n",
        "\n",
        "**CSV-filer:**\n",
        "```sql\n",
        "-- Gem data til CSV\n",
        "COPY kunder TO 'output/kunder_eksport.csv' (HEADER, DELIMITER ',');\n",
        "```\n",
        "\n",
        "**Parquet-filer:**\n",
        "```sql\n",
        "-- Gem data til Parquet\n",
        "COPY kunder TO 'output/kunder_eksport.parquet' (FORMAT PARQUET);\n",
        "```\n",
        "\n",
        "**JSON-filer:**\n",
        "```sql\n",
        "-- Gem data til JSON\n",
        "COPY kunder TO 'output/kunder_eksport.json' (FORMAT JSON);\n",
        "```\n",
        "\n",
        "**Via Python:**\n",
        "```python\n",
        "# Eksporter til CSV\n",
        "conn.execute(\"COPY kunder TO 'output/kunder_eksport.csv' (HEADER, DELIMITER ',')\")\n",
        "\n",
        "# Eksporter til Parquet\n",
        "conn.execute(\"COPY kunder TO 'output/kunder_eksport.parquet' (FORMAT PARQUET)\")\n",
        "\n",
        "# Med pandas\n",
        "df = conn.execute(\"SELECT * FROM kunder\").df()\n",
        "df.to_csv('output/kunder_pandas.csv', index=False)\n",
        "df.to_parquet('output/kunder_pandas.parquet')\n",
        "```\n",
        "\n",
        "## Tips til fejlfinding\n",
        "\n",
        "1. **Tjek versionsinformation:**\n",
        "   ```sql\n",
        "   SELECT version();\n",
        "   ```\n",
        "\n",
        "2. **Vis alle tabeller:**\n",
        "   ```sql\n",
        "   .tables\n",
        "   ```\n",
        "   eller\n",
        "   ```sql\n",
        "   SHOW TABLES;\n",
        "   ```\n",
        "\n",
        "3. **Undersøg en tabels struktur:**\n",
        "   ```sql\n",
        "   DESCRIBE kunder;\n",
        "   ```\n",
        "\n",
        "4. **Se alle rækker i en tabel:**\n",
        "   ```sql\n",
        "   SELECT * FROM kunder;\n",
        "   ```\n",
        "\n",
        "Denne vejledning dækker de grundlæggende aspekter af DuckDB for begyndere, fra installation til CRUD-operationer og arbejde med forskellige filformater. DuckDB er utrolig effektivt til analytiske opgaver og giver dig mulighed for at arbejde med data direkte fra kildefiler uden først at skulle indlæse dem i databasen."
      ],
      "id": "d42f7ffc"
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)",
      "path": "/usr/share/jupyter/kernels/python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}